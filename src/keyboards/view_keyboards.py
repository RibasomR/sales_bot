"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

–°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π,
—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import Optional


## –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞
def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞.
    
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    
    Example:
        >>> keyboard = get_main_menu_keyboard()
        >>> await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=keyboard)
    """
    keyboard = [
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="menu:stats")],
        [InlineKeyboardButton(text="üìù –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", callback_data="menu:all")],
        [
            InlineKeyboardButton(text="üí∞ –î–æ—Ö–æ–¥—ã", callback_data="menu:income"),
            InlineKeyboardButton(text="üí∏ –†–∞—Å—Ö–æ–¥—ã", callback_data="menu:expense"),
        ],
        [InlineKeyboardButton(text="üìÖ –ó–∞ –ø–µ—Ä–∏–æ–¥", callback_data="menu:period")],
        [InlineKeyboardButton(text="üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="menu:categories")],
        [
            InlineKeyboardButton(text="üì§ –≠–∫—Å–ø–æ—Ä—Ç", callback_data="menu:export"),
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="menu:settings"),
        ],
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


## –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º
def get_transactions_navigation_keyboard(
    page: int,
    total_pages: int,
    transaction_type: Optional[str] = None,
    period_filter: Optional[str] = None
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å–ø–∏—Å–∫—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
    
    :param page: –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 1)
    :param total_pages: –í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü
    :param transaction_type: –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (all/income/expense)
    :param period_filter: –§–∏–ª—å—Ç—Ä –ø–æ –ø–µ—Ä–∏–æ–¥—É
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    
    Example:
        >>> keyboard = get_transactions_navigation_keyboard(page=1, total_pages=5)
        >>> await message.answer("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:", reply_markup=keyboard)
    """
    buttons = []
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_row = []
    if page > 1:
        callback = f"nav:prev:{page-1}"
        if transaction_type:
            callback += f":{transaction_type}"
        if period_filter:
            callback += f":{period_filter}"
        nav_row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=callback))
    
    nav_row.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="nav:page"))
    
    if page < total_pages:
        callback = f"nav:next:{page+1}"
        if transaction_type:
            callback += f":{transaction_type}"
        if period_filter:
            callback += f":{period_filter}"
        nav_row.append(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=callback))
    
    buttons.append(nav_row)
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
    buttons.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)


## –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
def get_transaction_actions_keyboard(transaction_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    
    :param transaction_id: ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π
    
    Example:
        >>> keyboard = get_transaction_actions_keyboard(transaction_id=123)
        >>> await message.answer("–ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=keyboard)
    """
    keyboard = [
        [
            InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit:{transaction_id}"),
            InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete:{transaction_id}"),
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="back:list")],
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


## –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
def get_delete_confirmation_keyboard(transaction_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    
    :param transaction_id: ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    
    Example:
        >>> keyboard = get_delete_confirmation_keyboard(transaction_id=123)
        >>> await message.answer("–£–¥–∞–ª–∏—Ç—å?", reply_markup=keyboard)
    """
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"delete:confirm:{transaction_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="delete:cancel"),
        ],
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


## –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
def get_period_filter_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.
    
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø–µ—Ä–∏–æ–¥–æ–≤
    
    Example:
        >>> keyboard = get_period_filter_keyboard()
        >>> await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:", reply_markup=keyboard)
    """
    keyboard = [
        [
            InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data="period:today"),
            InlineKeyboardButton(text="–í—á–µ—Ä–∞", callback_data="period:yesterday"),
        ],
        [
            InlineKeyboardButton(text="–ù–µ–¥–µ–ª—è", callback_data="period:week"),
            InlineKeyboardButton(text="–ú–µ—Å—è—Ü", callback_data="period:month"),
        ],
        [
            InlineKeyboardButton(text="–ì–æ–¥", callback_data="period:year"),
            InlineKeyboardButton(text="–í—Å—ë –≤—Ä–µ–º—è", callback_data="period:all"),
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:main")],
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


## –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def get_edit_field_keyboard(transaction_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
    
    :param transaction_id: ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ–ª—è–º–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    Example:
        >>> keyboard = get_edit_field_keyboard(transaction_id=123)
        >>> await message.answer("–ß—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=keyboard)
    """
    keyboard = [
        [InlineKeyboardButton(text="üíµ –°—É–º–º–∞", callback_data=f"edit:field:amount:{transaction_id}")],
        [InlineKeyboardButton(text="üè∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è", callback_data=f"edit:field:category:{transaction_id}")],
        [InlineKeyboardButton(text="üìù –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit:field:description:{transaction_id}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="edit:cancel")],
    ]
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

