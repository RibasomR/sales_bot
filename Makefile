## Makefile –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏

.PHONY: help build up down restart logs shell db-shell redis-shell clean migrate

## –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN := \033[0;32m
YELLOW := \033[0;33m
RED := \033[0;31m
NC := \033[0m

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}'

build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	@echo "$(GREEN)üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	docker-compose build

up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose up -d
	@echo "$(GREEN)‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

up-prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ...$(NC)"
	docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
	@echo "$(GREEN)‚úÖ Production —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã$(NC)"

down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose down

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	docker-compose restart

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	docker-compose logs -f

logs-bot: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±–æ—Ç–∞
	docker-compose logs -f bot

logs-db: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ PostgreSQL
	docker-compose logs -f postgres

ps: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	docker-compose ps

shell: ## –í–æ–π—Ç–∏ –≤ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –±–æ—Ç–∞
	docker-compose exec bot /bin/bash

db-shell: ## –í–æ–π—Ç–∏ –≤ PostgreSQL
	docker-compose exec postgres psql -U finance_user -d finance_bot

redis-shell: ## –í–æ–π—Ç–∏ –≤ Redis CLI
	docker-compose exec redis redis-cli -a $$(grep REDIS_PASSWORD .env | cut -d '=' -f2)

migrate: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
	@echo "$(GREEN)üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	docker-compose exec bot alembic upgrade head
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã$(NC)"

migrate-create: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make migrate-create MSG="–æ–ø–∏—Å–∞–Ω–∏–µ")
	@echo "$(GREEN)üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏...$(NC)"
	docker-compose exec bot alembic revision --autogenerate -m "$(MSG)"

clean: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ volumes
	@echo "$(RED)‚ö†Ô∏è  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? [y/N] " -n 1 -r; \
	echo; \
	if [[ $$REPLY =~ ^[Yy]$$ ]]; then \
		docker-compose down -v; \
		echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"; \
	fi

stop-bot: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞
	docker-compose stop bot

start-bot: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–æ—Ç–∞
	docker-compose start bot

rebuild-bot: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
	@echo "$(GREEN)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –±–æ—Ç–∞...$(NC)"
	docker-compose build bot
	docker-compose up -d bot
	@echo "$(GREEN)‚úÖ –ë–æ—Ç –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω$(NC)"

backup-db: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(GREEN)üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ë–î...$(NC)"
	@mkdir -p backups
	docker-compose exec -T postgres pg_dump -U finance_user finance_bot > backups/backup_$$(date +%Y%m%d_%H%M%S).sql
	@echo "$(GREEN)‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –≤ backups/$(NC)"

restore-db: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î –∏–∑ –±—ç–∫–∞–ø–∞ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make restore-db FILE=backups/backup.sql)
	@echo "$(YELLOW)üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –∏–∑ $(FILE)...$(NC)"
	docker-compose exec -T postgres psql -U finance_user -d finance_bot < $(FILE)
	@echo "$(GREEN)‚úÖ –ë–î –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@echo "\n$(YELLOW)PostgreSQL:$(NC)"
	@docker-compose exec postgres pg_isready -U finance_user || echo "$(RED)‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo "\n$(YELLOW)Redis:$(NC)"
	@docker-compose exec redis redis-cli -a $$(grep REDIS_PASSWORD .env | cut -d '=' -f2) ping || echo "$(RED)‚ùå Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo "\n"

install: ## –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env, —Å–±–æ—Ä–∫–∞, –∑–∞–ø—É—Å–∫)
	@echo "$(GREEN)üì¶ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞...$(NC)"
	@if [ ! -f .env ]; then \
		cp env.example .env; \
		echo "$(YELLOW)‚ö†Ô∏è  –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω .env —Ñ–∞–π–ª. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ!$(NC)"; \
		echo "$(YELLOW)‚ö†Ô∏è  –ò–∑–º–µ–Ω–∏—Ç–µ BOT_TOKEN, –ø–∞—Ä–æ–ª–∏ –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã$(NC)"; \
		exit 1; \
	fi
	@echo "$(GREEN)üî® –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	make build
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	make up
	@echo "$(GREEN)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (20 —Å–µ–∫)...$(NC)"
	@sleep 20
	@echo "$(GREEN)üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	make migrate
	@echo "$(GREEN)‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!$(NC)"
	@echo "$(YELLOW)üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: make logs$(NC)"


