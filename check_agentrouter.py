"""
Script to check AgentRouter API connection.
"""

import asyncio
import sys

from config import get_settings
from src.services.openrouter_service import parse_transaction_text


async def check_agentrouter():
    """
    Check AgentRouter API connection.
    """
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ AgentRouter API...\n")
    
    settings = get_settings()
    
    if not settings.agentrouter_api_key:
        print("‚ùå AgentRouter API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        print("\nüí° –î–æ–±–∞–≤—å—Ç–µ AGENTROUTER_API_KEY –≤ .env —Ñ–∞–π–ª")
        print("   –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á: https://agentrouter.org/console/token")
        return False
    
    print(f"‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω: {settings.agentrouter_api_key[:15]}...")
    
    # Test parsing
    test_text = "–ü–æ—Ç—Ä–∞—Ç–∏–ª 500 —Ä—É–±–ª–µ–π –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –ø–∞—Ä—Å–∏–Ω–≥: '{test_text}'")
    
    try:
        result = await parse_transaction_text(test_text)
        print("\n‚úÖ AgentRouter API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:")
        print(f"   ‚Ä¢ –¢–∏–ø: {result['type']}")
        print(f"   ‚Ä¢ –°—É–º–º–∞: {result['amount']} ‚ÇΩ")
        print(f"   ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {result.get('category', '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')}")
        print(f"   ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: {result.get('description', '–ù–µ—Ç')}")
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AgentRouter API:")
        print(f"   {str(e)}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ AGENTROUTER_API_KEY –≤ .env")
        print("   2. –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
        print("   3. AgentRouter API –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
        return False


if __name__ == "__main__":
    try:
        success = asyncio.run(check_agentrouter())
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n‚õî –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\nüí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

